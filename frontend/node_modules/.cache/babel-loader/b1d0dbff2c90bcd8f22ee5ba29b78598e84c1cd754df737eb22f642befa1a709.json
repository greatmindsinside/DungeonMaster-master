{"ast":null,"code":"var _jsxFileName = \"C:\\\\DungeonMaster-master\\\\frontend\\\\src\\\\App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport { generateImage } from \"./openaiService\";\n\n// Define the type for gameText\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst gameText = {\n  start: {\n    description: `The room is dim, lit only by the flickering light from an old, buzzing fluorescent tube in the corner. A man stands in the center, his eyes fixed upwards, staring at the slow, hypnotic rotation of a ceiling fan. Each blade cuts through the thick air with a quiet whirr, casting brief shadows that ripple across his weathered face.`,\n    options: [{\n      text: \"Go north\",\n      nextLocation: \"hallway\"\n    }]\n  },\n  hallway: {\n    description: \"You are in a hallway. There is a door to the south and a door to the east.\",\n    options: [{\n      text: \"Go south\",\n      nextLocation: \"start\"\n    }, {\n      text: \"Go east\",\n      nextLocation: \"treasureRoom\"\n    }]\n  },\n  treasureRoom: {\n    description: \"You found a room filled with treasure! You win!\",\n    options: [{\n      text: \"Play again\",\n      nextLocation: \"start\"\n    }]\n  }\n};\nfunction App() {\n  _s();\n  const [location, setLocation] = useState(\"start\");\n  const [imageUrl, setImageUrl] = useState(null);\n  useEffect(() => {\n    const fetchImage = async () => {\n      var _image$data$0$url, _image$data, _image$data$;\n      const image = await generateImage(gameText[location].description);\n      setImageUrl((_image$data$0$url = image === null || image === void 0 ? void 0 : (_image$data = image.data) === null || _image$data === void 0 ? void 0 : (_image$data$ = _image$data[0]) === null || _image$data$ === void 0 ? void 0 : _image$data$.url) !== null && _image$data$0$url !== void 0 ? _image$data$0$url : null); // Use optional chaining and fallback to null\n    };\n    fetchImage();\n  }, [location]);\n  const handleOptionClick = nextLocation => {\n    setLocation(nextLocation);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: gameText[location].description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), imageUrl ? /*#__PURE__*/_jsxDEV(\"img\", {\n        src: imageUrl,\n        alt: \"Scene\",\n        style: {\n          width: \"100%\",\n          height: \"auto\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading image...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this) // Fallback message while the image is being fetched\n      , /*#__PURE__*/_jsxDEV(\"div\", {\n        children: gameText[location].options.map((option, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleOptionClick(option.nextLocation),\n          children: option.text\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"1dZZAkhtH/WugQ85ngen64aJIPk=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","generateImage","jsxDEV","_jsxDEV","gameText","start","description","options","text","nextLocation","hallway","treasureRoom","App","_s","location","setLocation","imageUrl","setImageUrl","fetchImage","_image$data$0$url","_image$data","_image$data$","image","data","url","handleOptionClick","className","children","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","style","width","height","map","option","index","onClick","_c","$RefreshReg$"],"sources":["C:/DungeonMaster-master/frontend/src/App.tsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport { generateImage } from \"./openaiService\";\n\n// Define the type for gameText\ntype GameText = {\n  [key: string]: {\n    description: string;\n    options: { text: string; nextLocation: string }[];\n  };\n};\n\nconst gameText: GameText = {\n  start: {\n    description: `The room is dim, lit only by the flickering light from an old, buzzing fluorescent tube in the corner. A man stands in the center, his eyes fixed upwards, staring at the slow, hypnotic rotation of a ceiling fan. Each blade cuts through the thick air with a quiet whirr, casting brief shadows that ripple across his weathered face.`,\n    options: [{ text: \"Go north\", nextLocation: \"hallway\" }],\n  },\n  hallway: {\n    description:\n      \"You are in a hallway. There is a door to the south and a door to the east.\",\n    options: [\n      { text: \"Go south\", nextLocation: \"start\" },\n      { text: \"Go east\", nextLocation: \"treasureRoom\" },\n    ],\n  },\n  treasureRoom: {\n    description: \"You found a room filled with treasure! You win!\",\n    options: [{ text: \"Play again\", nextLocation: \"start\" }],\n  },\n};\n\nfunction App() {\n  const [location, setLocation] = useState(\"start\");\n  const [imageUrl, setImageUrl] = useState<string | null>(null);\n\n  useEffect(() => {\n    const fetchImage = async () => {\n      const image = await generateImage(gameText[location].description);\n      setImageUrl(image?.data?.[0]?.url ?? null); // Use optional chaining and fallback to null\n    };\n\n    fetchImage();\n  }, [location]);\n\n  const handleOptionClick = (nextLocation: string) => {\n    setLocation(nextLocation);\n  };\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <p>{gameText[location].description}</p>\n        {imageUrl ? (\n          <img\n            src={imageUrl}\n            alt=\"Scene\"\n            style={{ width: \"100%\", height: \"auto\" }}\n          />\n        ) : (\n          <p>Loading image...</p> // Fallback message while the image is being fetched\n        )}\n        <div>\n          {gameText[location].options.map((option, index) => (\n            <button\n              key={index}\n              onClick={() => handleOptionClick(option.nextLocation)}\n            >\n              {option.text}\n            </button>\n          ))}\n        </div>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}