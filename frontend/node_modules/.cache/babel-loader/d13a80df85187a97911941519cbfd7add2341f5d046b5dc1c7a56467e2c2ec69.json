{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\GreatMindsInside\\\\Desktop\\\\TextAdventureInC\\\\DungeonMaster-master\\\\src\\\\App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport { apiKey, generateImage } from \"./openaiService\";\n\n// Define the type for gameText\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst gameText = {\n  start: {\n    description: `${apiKey} The room is dim, lit only by the flickering light from an old, buzzing fluorescent tube in the corner. A man stands in the center, his eyes fixed upwards, staring at the slow, hypnotic rotation of a ceiling fan. Each blade cuts through the thick air with a quiet whirr, casting brief shadows that ripple across his weathered face.`,\n    options: [{\n      text: \"Go north\",\n      nextLocation: \"hallway\"\n    }]\n  },\n  hallway: {\n    description: \"You are in a hallway. There is a door to the south and a door to the east.\",\n    options: [{\n      text: \"Go south\",\n      nextLocation: \"start\"\n    }, {\n      text: \"Go east\",\n      nextLocation: \"treasureRoom\"\n    }]\n  },\n  treasureRoom: {\n    description: \"You found a room filled with treasure! You win!\",\n    options: [{\n      text: \"Play again\",\n      nextLocation: \"start\"\n    }]\n  }\n};\nfunction App() {\n  _s();\n  const [location, setLocation] = useState(\"start\");\n  const [imageUrl, setImageUrl] = useState(null);\n  useEffect(() => {\n    const fetchImage = async () => {\n      const url = await generateImage(gameText[location].description);\n      setImageUrl(url);\n    };\n    fetchImage();\n  }, [location]);\n  const handleOptionClick = nextLocation => {\n    setLocation(nextLocation);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: gameText[location].description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), imageUrl && /*#__PURE__*/_jsxDEV(\"img\", {\n        src: imageUrl,\n        alt: \"Scene\",\n        style: {\n          width: \"100%\",\n          height: \"auto\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 22\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: gameText[location].options.map((option, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleOptionClick(option.nextLocation),\n          children: option.text\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"1dZZAkhtH/WugQ85ngen64aJIPk=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","apiKey","generateImage","jsxDEV","_jsxDEV","gameText","start","description","options","text","nextLocation","hallway","treasureRoom","App","_s","location","setLocation","imageUrl","setImageUrl","fetchImage","url","handleOptionClick","className","children","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","style","width","height","map","option","index","onClick","_c","$RefreshReg$"],"sources":["C:/Users/GreatMindsInside/Desktop/TextAdventureInC/DungeonMaster-master/src/App.tsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport { apiKey, generateImage } from \"./openaiService\";\n\n// Define the type for gameText\ntype GameText = {\n  [key: string]: {\n    description: string;\n    options: { text: string; nextLocation: string }[];\n  };\n};\n\nconst gameText: GameText = {\n  start: {\n    description: `${apiKey} The room is dim, lit only by the flickering light from an old, buzzing fluorescent tube in the corner. A man stands in the center, his eyes fixed upwards, staring at the slow, hypnotic rotation of a ceiling fan. Each blade cuts through the thick air with a quiet whirr, casting brief shadows that ripple across his weathered face.`,\n    options: [{ text: \"Go north\", nextLocation: \"hallway\" }],\n  },\n  hallway: {\n    description: \"You are in a hallway. There is a door to the south and a door to the east.\",\n    options: [\n      { text: \"Go south\", nextLocation: \"start\" },\n      { text: \"Go east\", nextLocation: \"treasureRoom\" },\n    ],\n  },\n  treasureRoom: {\n    description: \"You found a room filled with treasure! You win!\",\n    options: [{ text: \"Play again\", nextLocation: \"start\" }],\n  },\n};\n\n\n\nfunction App() {\n  const [location, setLocation] = useState(\"start\");\n  const [imageUrl, setImageUrl] = useState<string | null>(null);\n\n  useEffect(() => {\n    const fetchImage = async () => {\n      const url = await generateImage(gameText[location].description);\n      setImageUrl(url);\n    };\n\n    fetchImage();\n  }, [location]);\n\n  const handleOptionClick = (nextLocation: string) => {\n    setLocation(nextLocation);\n  };\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <p>{gameText[location].description}</p>\n        {imageUrl && <img src={imageUrl} alt=\"Scene\" style={{ width: \"100%\", height: \"auto\" }} />}\n        <div>\n          {gameText[location].options.map((option, index) => (\n            <button key={index} onClick={() => handleOptionClick(option.nextLocation)}>\n              {option.text}\n            </button>\n          ))}\n        </div>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}