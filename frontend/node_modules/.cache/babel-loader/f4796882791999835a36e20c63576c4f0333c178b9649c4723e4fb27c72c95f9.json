{"ast":null,"code":"// import OpenAI from \"openai\";\n// const openai = new OpenAI({\n//   apiKey: process.env.REACT_APP_OPENAI_API_KEY\n// });\n\n// export async function generateText(): Promise<OpenAI.Chat.Completions.ChatCompletion> {\n//   return await openai.chat.completions.create({\n//     model: \"gpt-4o\",\n//     messages: [{ role: \"user\", content: \"write a haiku about ai\" }],\n//   });\n// }\n\nexport async function generateImage(prompt) {\n  try {\n    const response = await fetch(\"http://localhost:5000/generate-image\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        prompt\n      })\n    });\n    if (!response.ok) {\n      throw new Error(\"Failed to generate image\");\n    }\n    return await response.json();\n  } catch (error) {\n    console.error(\"Error fetching image from backend:\", error);\n    return null;\n  }\n}","map":{"version":3,"names":["generateImage","prompt","response","fetch","method","headers","body","JSON","stringify","ok","Error","json","error","console"],"sources":["C:/DungeonMaster-master/frontend/src/openaiService.ts"],"sourcesContent":["// import OpenAI from \"openai\";\r\n// const openai = new OpenAI({\r\n//   apiKey: process.env.REACT_APP_OPENAI_API_KEY\r\n// });\r\n\r\n// export async function generateText(): Promise<OpenAI.Chat.Completions.ChatCompletion> {\r\n//   return await openai.chat.completions.create({\r\n//     model: \"gpt-4o\",\r\n//     messages: [{ role: \"user\", content: \"write a haiku about ai\" }],\r\n//   });\r\n// }\r\n\r\nexport async function generateImage(prompt: string) {\r\n  try {\r\n    const response = await fetch(\"http://localhost:5000/generate-image\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({ prompt }),\r\n    });\r\n    if (!response.ok) {\r\n      throw new Error(\"Failed to generate image\");\r\n    }\r\n    return await response.json();\r\n  } catch (error) {\r\n    console.error(\"Error fetching image from backend:\", error);\r\n    return null;\r\n  }\r\n}\r\n"],"mappings":"AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,eAAeA,aAAaA,CAACC,MAAc,EAAE;EAClD,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,sCAAsC,EAAE;MACnEC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAEP;MAAO,CAAC;IACjC,CAAC,CAAC;IACF,IAAI,CAACC,QAAQ,CAACO,EAAE,EAAE;MAChB,MAAM,IAAIC,KAAK,CAAC,0BAA0B,CAAC;IAC7C;IACA,OAAO,MAAMR,QAAQ,CAACS,IAAI,CAAC,CAAC;EAC9B,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,oCAAoC,EAAEA,KAAK,CAAC;IAC1D,OAAO,IAAI;EACb;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}